*hlwords.txt*             Highlight multiple different words at the same time.

==============================================================================
Contents                                                    *hlwords-contents*


1. Configuration ..................................... |hlwords-configuration|
  - Options ................................................ |hlwords-options|
2. Key Mappings ....................................... |hlwords-key-mappings|
3. Lua Module(API) ...................................... |hlwords-lua-module|
  - hlwords ..................................... |hlwords-lua-module-hlwords|
4. Behavior ............................................... |hlwords-behavior|
5. Testing ................................................. |hlwords-testing|


==============================================================================
1. Configuration                                       *hlwords-configuration*


Hlwords.nvim can be configured by passing a table of options to the `setup()`.
Available options are listed in the next section.


                                                             *hlwords-options*
Options ~


                                                          *hlwords-opt-colors*
  colors ~

    Highlight colors.
    You can set any number of color definition maps that are compatible with
    |nvim_set_hl()|, and can highlight as many items as you set here at the
    same time.

    Type: `table[]` ~

    Default: ~
>lua
        {
          { fg = '#000000', bg = '#00ffff' },
          { fg = '#ffffff', bg = '#ff00ff' },
          { fg = '#000000', bg = '#ffff00' },
          { fg = '#ffffff', bg = '#444444' },
        },
<

                                              *hlwords-opt-highlight_priority*
  highlight_priority ~

    Priority order when highlights overlap (see |matchadd()|).

    Type: `integer` ~

    Default: 10 ~


                                                          *hlwords-opt-random*
  random ~

    Order of use of highlight colors.
    If false, they will be used in the order specified in the `colors` option.

    Type: `boolean` ~

    Default: true ~


                                                     *hlwords-opt-strict_word*
  strict_word ~

    Handling of words specified in normal mode.
    When highlighting is executed in normal mode, a pattern including word
    boundaries ('\\<' .. word .. '\\>') is used in interestingwords.nvim, but
    not in vim-quickhl.
    If set to false, the match pattern will no longer represent exact words,
    so the behavior will be similar to vim-quickhl.

    Type: `boolean` ~

    Default: false ~


==============================================================================
2. Key Mappings                                         *hlwords-key-mappings*


This plugin does not provide a default keymap, and will have no effect until
you add your own maps to it. Below is an example:
>lua
  -- Toggles highlighting of the word (<word>) under the cursor.
  vim.keymap.set('n', '<leader>hh', function()
    require('hlwords').toggle()
  end)

  -- Toggle highlighting current selection.
  -- "V-LINE" mode is not applicable, and it's possible to select a range
  -- spanning multiple lines in "V-BLOCK" mode but it doesn't make much sense.
  vim.keymap.set('x', '<leader>hh', function()
    require('hlwords').toggle()
  end)

  -- Remove all highlights.
  vim.keymap.set('n', '<leader>hc', function()
    require('hlwords').clear()
  end)
<

==============================================================================
3. Lua Module(API)                                        *hlwords-lua-module*


                                                         *hlwords-api-hlwords*
  Module:hlwords ~
>lua
  local api = require('hlwords')
<

                                                   *hlwords-api-hlwords-setup*
  api.setup({options}) ~

    Initializes and configures plugin with the provided {options}.

    Parameters: ~
      {options} `{[string]: any}?` See |hlwords-options|.


                                                   *hlwords-api-hlwords-clear*
  api.clear() ~

    Remove all highlights generated by this plugin.


                                                  *hlwords-api-hlwords-toggle*
  api.toggle() ~

    Toggle highlights.
    In normal mode, the word (`cword`) under the cursor is targeted.
    In visual mode (`Visual`, `V-BLOCK`), the selected range is targeted.


==============================================================================
4. Behavior                                                 *hlwords-behavior*


Regardless of the mode (normal or visual), the "case" of a word or selection
is affected by the values of the 'ignorecase' and 'smartcase' options.

In the example below, "|" represents the cursor position, "[]" represents one
highlight, and "{}" represents another highlight.


  'ignorecase' = true, 'smartcase' = true ~

    f|oo --(toggle)--> [f|oo] --(toggle)--> f|oo
    Foo  ------------> [Foo]  ------------> Foo

    foo  ------------> foo    ------------> foo
    F|oo --(toggle)--> [F|oo] --(toggle)--> F|oo

    f|oo --(toggle)--> [f|oo] (cursor->Foo) [foo]  ------------> [foo]
    Foo  ------------> [Foo]  ------------- [F|oo] --(toggle)--> {[F|oo]}

      (... from this state ...)

      (a) ------------> [foo]
          --(toggle)--> [F|oo]

      (b) (cursor->foo) [f|oo]  --(toggle)-> f|oo
          ------------- {[Foo]} -----------> {Foo}


  'ignorecase' = true, 'smartcase' = false ~

    f|oo --(toggle)--> [f|oo] --(toggle)--> f|oo
    Foo  ------------> [Foo]  ------------> Foo

    foo  ------------> [foo]  ------------> foo
    F|oo --(toggle)--> [F|oo] --(toggle)--> F|oo

    f|oo --(toggle)--> [f|oo] (cursor->Foo) [foo]  ------------> foo
    Foo  ------------> [Foo]  ------------- [F|oo] --(toggle)--> F|oo


  'ignorecase' = false, 'smartcase' = any (not affect) ~

    f|oo --(toggle)--> [f|oo] --(toggle)--> f|oo
    Foo  ------------> Foo    ------------> Foo

    foo  ------------> foo    ------------> foo
    F|oo --(toggle)--> [F|oo] --(toggle)--> F|oo

    f|oo --(toggle)--> [f|oo] (cursor->Foo) [foo] ------------> [foo]
    Foo  ------------> Foo    ------------- F|oo  --(toggle)--> {F|oo}


==============================================================================
5. Testing                                                   *hlwords-testing*


Install Lua-5.1
Install LuaRocks
Install busted (global, https://github.com/lunarmodules/busted)
Install vusted (global, https://github.com/notomo/vusted)
Run vusted


==============================================================================

vim:tw=78:ts=8:noet:ft=help:norl:
